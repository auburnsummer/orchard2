from rules.contrib.models import RulesModel
from django.db import models
from cafe.models.id_utils import generate_rdlevel_prefill_id, RDLEVEL_PREFILL_ID_LENGTH

from cafe.models import User, Club
from django.core.serializers.json import DjangoJSONEncoder
from django.utils.timezone import now

from .predicates import can_make_level_from_prefill

class RDLevelPrefillResult(RulesModel):
    """
    A prefill result stores the initial analysis of an rdzip file.
    """
    id = models.CharField(max_length=RDLEVEL_PREFILL_ID_LENGTH, primary_key=True, default=generate_rdlevel_prefill_id)
    # url of the level that's being prefilled
    url = models.TextField(default="")
    # datetime that the prefill was initiated. this is used to cleanup old prefill results.
    created_at = models.DateTimeField(blank=False, default=now)
    # version of the prefill task that ran.
    version = models.IntegerField()
    # type of prefill that was run.
    prefill_type = models.CharField(max_length=100)
    # is set to True when the prefill is ready to be used (data has been populated)
    ready = models.BooleanField(default=False)
    # generated by the prefill task.
    data = models.JSONField(default=dict, encoder=DjangoJSONEncoder)
    # the user that initiated the prefill.
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    # the club that the prefill is allowed to be used for.
    club = models.ForeignKey(Club, on_delete=models.CASCADE)
    # errors that occurred during the prefill.
    errors = models.TextField(default="")

    def to_dict(self):
        return {
            "id": self.id,
            "url": self.url,
            "created_at": self.created_at,
            "version": self.version,
            "prefill_type": self.prefill_type,
            "ready": self.ready,
            "data": self.data,
            "user": self.user.to_dict(),
            "club": self.club.to_dict(),
            "errors": self.errors
        }

    class Meta:
        rules_permissions = {
            # cafe.can_make_levels_from_rdlevelprefillresult
            "can_make_levels_from": can_make_level_from_prefill
        }