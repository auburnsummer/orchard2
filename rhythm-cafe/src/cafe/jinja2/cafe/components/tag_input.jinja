{% macro tag_input_init () %}
<script>
document.addEventListener('alpine:init', () => {
    Alpine.data('tagInput', (tags, name) => ({
        tags,
        tagLabel(index) {
            return index === 0 ? name : `${name} (${index+1})`;
        },
        canDeleteTag(index) {
            return this.tags.filter((tag, i) => i !== index && tag.length > 0).length > 0;
        },
        deleteTag(index) {
            this.tags.splice(index, 1);
        },
        get canAddNewTag() {
            return this.tags.every(tag => tag.length > 0);
        },
        addTag(index) {
            this.tags.push('');
        },
        get addTagButtonLabel() {
            return `Add ${name}`;
        }
    }));
});
</script>
{% endmacro %}

{% macro tag_input (tags, name) %}
<div x-data="tagInput({{ tags }}, {{ name }})" class="cti">
    <template x-for="(tag, index) in tags">
        <sl-input :placeholder="tagLabel(index)" x-model="tags[index]" class="cti__input">
            <sl-icon-button
                name="trash3"
                label="Settings"
                slot="suffix"
                :disabled="!canDeleteTag(index)"
                class="cti__delete-button"
                @click="deleteTag(index)"
            >
            </sl-icon-button>
        </sl-input>
    </template>
    <sl-button
        @click="addTag"
        :disabled="!canAddNewTag"
        x-text="addTagButtonLabel"
        variant="primary"
        class="cti__add-button"
        outline
    >
    
    </sl-button>
</div>

<style data-hoist="true">
    .cti {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
</style>
{% endmacro %}