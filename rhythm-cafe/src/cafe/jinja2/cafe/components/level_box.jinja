{% macro level_box_init () %}
<script>
document.addEventListener('alpine:init', () => {
    Alpine.data('levelBox', (level) => ({
        level,
        copyEffect: false,
        async onCopyClick() {
            try {
                await navigator.clipboard.writeText(this.level.rdzip_url);
                this.copyEffect = false;
                await this.$nextTick();
                this.copyEffect = true;
            }
            catch (e) {
                console.error(e);
            }
        }
    }))
})
</script>
{% endmacro %}

{% macro level_box(level) %}
    <article class="clb" x-data="levelBox({{ level }})">
        <div class="clb__imagebox">
            <img class="clb__image" :src="level.thumb_url" alt="Level image" loading="lazy" />
            <div class="clb__overlay">
                <div class="clb__description">
                    <template x-for="line in level.description.split('\n')">
                        <p x-text="line"></p>
                    </template>
                </div>
                <div class="clb__buttons">
                    <button
                        class="clb__button clb__copy"
                        :class="copyEffect ? 'clb__copy--active' : ''"
                        @click="onCopyClick"
                        type="button"
                    >
                        <sl-icon name="clipboard2-pulse-fill" class="clb__overlayicon"></sl-icon>
                    </button>
                    <a :href="level.rdzip_url" :download="level.song + '.rdzip'" class="clb__button clb__download">
                        <sl-icon name="cloud-arrow-down-fill" class="clb__overlayicon"></sl-icon>
                    </a>
                </div>
            </div>

        </div>
    </article>

<style data-hoist="true">
.clb {
    max-width: 30rem;
    background-color: var(--sl-color-neutral-100);
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    box-shadow: var(--sl-shadow-medium);
}

.clb__imagebox {
    aspect-ratio: 16 / 9;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    overflow: hidden;
}

.clb__image, .clb__overlay {
    grid-column: 1;
    grid-row: 1;
}

.clb__image {
    width: 100%;
    height: 100%;
    background-color: var(--sl-color-neutral-600);
    object-fit: cover;
    transition-property: filter;
    transition-duration: 250ms;
}

.clb:hover .clb__image {
    filter: brightness(55%) saturate(30%) blur(2px);
}

.clb__overlay {
    z-index: 10;
    padding: 1.25rem;
    opacity: 0;
    color: white;
    transition-property: opacity;
    transition-duration: 250ms;
    box-shadow: inset 0 3px 5px 0 rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: row;
}

.clb:hover .clb__overlay {
    opacity: 1;
}

.clb__description {
    font-size: 0.875rem;
    line-height: 1rem;
    flex-grow: 1;
    overflow-y: auto;

    display: flex;
    flex-direction: column;
    justify-content: start;
    row-gap: 0.5rem;
}

.clb__description > p {
    margin: 0;
}


.clb__buttons {
    width: 2rem;
    margin-left: 0.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
}

.clb__button {
    border-style: solid;
    border-width: 1px;
    border-color: white;
    padding: 0.5rem;
    border-radius: 0.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    color: var(--sl-color-neutral-100);
}

.clb__button:hover {
    background-color: var(--sl-color-violet-400);
    cursor: pointer;
}

.clb__copy {
    position: relative;
}

.clb__copy::after {
    content: "copied!";
    position: absolute;
    display: flex;
    visibility: hidden;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    color: var(--sl-color-success-400);
    font-weight: 600;
    z-index: 10;
    transform: translateY(-0.5rem);
    opacity: 1;
    transition-property: transform, opacity;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.clb__copy--active::after {
    visibility: visible;
    opacity: 0;
    transform: translateY(-2.5rem);
    transition-duration: 1s;
}

.clb__download:hover, .clb__download:visited {
    color: var(--sl-color-neutral-100);
}

.clb__overlayicon {
    width: 1.25rem;
    height: 1.25rem;
}

</style>
{% endmacro %}